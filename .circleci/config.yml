version: 2
jobs:
  build_deploy:
    docker:
      - image: circleci/php:7.2-node

    working_directory: ~/drupal8

    steps:
      - checkout

      - run:
          name: install PHP extentions
          command: |
            sudo apt-get install -y --no-install-recommends \
              libjpeg-dev \
              libpng-dev \
              libpq-dev \
            ; \
            sudo docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \
            sudo docker-php-ext-install -j "$(nproc)" gd zip

      - run: sudo composer self-update
      - run: composer install --no-dev --optimize-autoloader

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
            - composer-v1-

      - run:
          name: build scss files js and fonts
          command: ./.circleci/scripts/build-css

      - run:
          name: dependencies
          command: |
            mkdir -p $HOME/.ssh && echo "StrictHostKeyChecking no" >> "$HOME/.ssh/config"
            # Set up our default git config settings.
            git config --global user.email "$GIT_EMAIL"
            git config --global user.name "Circle CI"
            git config --global core.fileMode false

      - run:
          name: Prepare for hosting
          command: |
            sed -i '1,/^.*:: cut :*/d' .gitignore

      - run:
          name: Deploy to Live
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              cd ~
              rsync -arvz -e "ssh -p ${SERVER_PORT}" drupal8/ $SERVER_USER@$SERVER_IP:$SERVER_HOME/$LIVE_PATH \
                --exclude '.env' \
                --exclude 'php.ini' \
                --exclude '.user.ini' \
                --exclude '.git' \
                --exclude '.gitignore' \
                --exclude 'sites/default/files' \
                --exclude 'scss' \
                --delete
            fi

      - run:
          name: Deploy to Staging
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              cd ~
              rsync -arvz -e "ssh -p ${SERVER_PORT}" drupal8/ $SERVER_USER@$SERVER_IP:$SERVER_HOME/$STAGING_PATH \
                --exclude '.env' \
                --exclude '.user.ini' \
                --exclude '.git' \
                --exclude 'php.ini' \
                --exclude '.gitignore' \
                --delete
            fi

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_deploy:
          filters:
            branches:
              only:
                - master
                - staging
